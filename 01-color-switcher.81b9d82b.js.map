{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,sC,SCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,IAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,GCPX,IAAMgB,EAAWC,SAASC,cAAc,sBAClCC,EAAUF,SAASC,cAAc,qBAcvC,IAiCME,EAAgB,IAAnB,W,sBAjCGC,EACUC,G,aACZC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKG,kBAAoBJ,EACzBH,EAAQQ,UAAW,E,gBAI+BhB,IAAlD,qB,MAAA,WACQY,KAAKE,WAGTT,EAASW,UAAW,EACpBR,EAAQQ,UAAW,EAEnBJ,KAAKE,UAAW,EAChBF,KAAKC,WAAaI,aACd,W,OAtBeC,EANhB,IAESC,OAFLC,KAAKC,MAAsB,SAAhBD,KAAKE,UAC1BC,SAAS,IACTC,SAAS,EAAG,SAKblB,SAASmB,KAAKC,MAAMC,gBAAkBT,GADzB,IAAUA,IAuBf,Q,CAKRlB,IAAA,oB,MAAA,WACIK,EAASW,UAAW,EACpBR,EAAQQ,UAAW,EAEnBY,cAAchB,KAAKC,YACnBD,KAAKE,UAAW,M,EAIrB,IAEHT,EAASwB,iBAAiB,SAAS,W,OAAMpB,EAAcqB,wBACvDtB,EAAQqB,iBAAiB,SAAS,W,OAAMpB,EAAcsB,uB","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/01-color-switcher.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","// Импортируем \nconst startBtn = document.querySelector('button[data-start]');\nconst stopBtn = document.querySelector('button[data-stop]');\n\n// Создание рандомного цвета\nfunction getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n\n//Создаем в html коде стиль backgroundColor\nfunction updateBodyBGcolor(color) {\n    document.body.style.backgroundColor = color;\n}\n\nclass ColorSwitcher {\n    constructor(updateBodyBGcolor) {\n    this.intervalID = null;\n    this.isActive = false;\n    this.updateBodyBGcolor = updateBodyBGcolor;\n    stopBtn.disabled = true;\n    }\n\n    //Старт для начала рандома цветов и делает кнопку не активной  \n    startChangeBGcolor() {\n        if (this.isActive) {\n        return;\n        }\n        startBtn.disabled = true;\n        stopBtn.disabled = false;\n\n        this.isActive = true;\n        this.intervalID = setInterval(\n            () => updateBodyBGcolor(getRandomHexColor()),\n            1000\n        );\n    }\n    \n    //Останавливает рандом цветов и делает кнопку не активной  \n    stopChangeBGcolor() {\n        startBtn.disabled = false;\n        stopBtn.disabled = true;\n\n        clearInterval(this.intervalID);\n        this.isActive = false;\n    }\n}\n\nconst colorSwitcher = new ColorSwitcher();\n\nstartBtn.addEventListener('click', () => colorSwitcher.startChangeBGcolor());\nstopBtn.addEventListener('click', () => colorSwitcher.stopChangeBGcolor());"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$2ec2bf6e450c0fe9$var$startBtn","document","querySelector","$2ec2bf6e450c0fe9$var$stopBtn","$2ec2bf6e450c0fe9$var$colorSwitcher","ColorSwitcher","updateBodyBGcolor1","this","intervalID","isActive","updateBodyBGcolor","disabled","setInterval","color","concat","Math","floor","random","toString","padStart","body","style","backgroundColor","clearInterval","addEventListener","startChangeBGcolor","stopChangeBGcolor"],"version":3,"file":"01-color-switcher.81b9d82b.js.map"}